@import "config";

#bokeh_container {
	position: absolute;
	width: 100%;
	height: 100%;
	top: -10%;
	left: -5%;
	z-index: -10;
}

@mixin bokeh_color($color) {
	$bg1: rgba($color, 0.15);
	$bg2: rgba($color, 0.05);
	$bg3: rgba($color, 0.07);

	background-color: $bg1;
	-webkit-box-shadow: 1em 1em 15px $bg2;
	-moz-box-shadow: 1em 1em 15px $bg2;
	border: 2px solid $bg3;
}

@mixin bokeh_size($size) {
	width: $size;
	height: $size;
	//-webkit-border-radius: $size / 2;
	//-moz-border-radius: $size / 2;
}
@mixin bokeh_size_circle($size) {
	-webkit-border-radius: $size / 2;
	-moz-border-radius: $size / 2;
}

@mixin bokeh_pos($top, $left) {
	position: relative;
	display: inline;
	float: left;
	left: $left;
	top: $top;
}

@mixin bokeh_group($top, $left) {
	position: relative;
	float: left;
	left: $left;
	top: $top;
}

/* single bokeh instance */
#bokeh_container .bokeh {
	position: absolute;
	display: inline;
	float: left;
}

/* colors */
@for $x from 1 through (5) {
	#bokeh_container .bokeh_color_#{$x}{
		@include bokeh_color(nth($scolors, $x));
	}
}

/* sizes */
$base_size: 2em;
$num: 7;
@for $x from 1 through ($num) {
	#bokeh_container .bokeh_size_#{$x}{
		@include bokeh_size($x * $base_size);
	}
}
@for $x from 1 through ($num) {
	#bokeh_container.circles .bokeh_size_#{$x}{
		@include bokeh_size_circle($x * $base_size);
	}
}

/* animations */
@keyframes bokehfadeinout {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
@-moz-keyframes bokehfadeinout {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
@-webkit-keyframes bokehfadeinout {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}

$basetime: 2;
$animnum: 7;
@for $x from 1 through ($animnum) {
	#bokeh_container .bokeh_anim_#{$x}{
		animation-name: bokehfadeinout;
		animation-duration: #{$x * $basetime}s;
		animation-iteration-count: infinite;

		-webkit-animation-name: bokehfadeinout;
		-webkit-animation-duration: #{$x * $basetime}s;
		-webkit-animation-iteration-count: infinite;

		-moz-animation-name: bokehfadeinout;
		-moz-animation-duration: #{$x * $basetime}s;
		-moz-animation-iteration-count: infinite;
	}
}